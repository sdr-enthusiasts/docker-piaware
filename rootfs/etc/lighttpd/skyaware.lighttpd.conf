server.modules = (
  "mod_access",
  "mod_alias",
  "mod_deflate",
  "mod_redirect",
  "mod_accesslog",
  "mod_setenv",
)

server.document-root        = "/var/www/html"
#server.upload-dirs          = ( "/var/cache/lighttpd/uploads" )
server.pid-file             = "/var/run/lighttpd.pid"
server.username             = "www-data"
server.groupname            = "www-data"
server.port                 = 80

index-file.names            = ( "index.php", "index.html", "index.lighttpd.html" )
url.access-deny             = ( "~", ".inc" )
static-file.exclude-extensions = ( ".php", ".pl", ".fcgi" )

# deflate.cache-dir           = "/var/cache/lighttpd/compress/"
deflate.mimetypes           = ( "application/javascript", "text/css", "text/html", "text/plain" )

# Allows access to the piaware status file, and
# does translation rewrites for the landing page

alias.url += (
    "/status.json" => "/run/piaware/status.json"
)

server.modules += ( "mod_rewrite" )

$HTTP["language"] =~ "(en)" {
    url.rewrite = ( "^/translations/lang.js$" => "/translations/%1.js" )
}
else $HTTP["language"] =~ ".*" {
    url.rewrite = ( "^/translations/lang.js$" => "/translations/en.js" )
}

# The stat cache must be disabled, as aircraft.json changes90-fa-statcache.conf
# frequently and lighttpd's stat cache often ends up with the
# wrong content length.
server.stat-cache-engine    = "disable"

# Allows access to the static files that provide the dump1090 map view,
# and also to the dynamically-generated json parts that contain aircraft
# data and are periodically written by the dump1090 daemon.

alias.url += (
  "/dump1090-fa/data/" => "/run/dump1090-fa/",
  "/dump1090-fa/" => "/usr/share/dump1090-fa/html/",
)

# redirect the slash-less URLs
url.redirect += (
  "^/dump1090-fa$" => "/dump1090-fa/",
)

alias.url += (
  "/skyaware/data/" => "/run/dump1090-fa/",
  "/skyaware/data-978/" => "/run/skyaware978/",
  "/skyaware/" => "/usr/share/skyaware/html/"
)

# redirect the slash-less URL
url.redirect += (
  "^/skyaware$" => "/skyaware/"
)

# Listen on port 8080 and serve the map there, too.
$SERVER["socket"] == ":8080" {
  alias.url += (
    "/data/" => "/run/dump1090-fa/",
    "/data-978/" => "/run/skyaware978/",
    "/" => "/usr/share/skyaware/html/"
  )
}

# Add CORS header
# server.modules += ( "mod_setenv" )
$HTTP["url"] =~ "^/dump1090-fa/data/.*\.json$" {
  setenv.add-response-header = ( "Access-Control-Allow-Origin" => "*" )
}

# Allows access to the static files that provide the skyaware978 map view,
# and also to the dynamically-generated json parts that contain aircraft
# data and are periodically written by the skyaware978 daemon.

alias.url += (
  "/skyaware978/data/" => "/run/skyaware978/",
  "/skyaware978/" => "/usr/share/skyaware978/html/"
)

# redirect the slash-less URL
url.redirect += (
  "^/skyaware978$" => "/skyaware978/"
)

# Listen on port 8978 and serve the map there, too.
$SERVER["socket"] == ":8978" {
  alias.url += (
    "/data/" => "/run/skyaware978/",
    "/" => "/usr/share/skyaware978/html/"
  )
}

# Add CORS header
# server.modules += ( "mod_setenv" )
$HTTP["url"] =~ "^/skyaware978/data/.*\.json$" {
  setenv.add-response-header = ( "Access-Control-Allow-Origin" => "*" )
}

# mimetype mapping
mimetype.assign             = (
  ".pdf"          =>      "application/pdf",
  ".sig"          =>      "application/pgp-signature",
  ".spl"          =>      "application/futuresplash",
  ".class"        =>      "application/octet-stream",
  ".ps"           =>      "application/postscript",
  ".torrent"      =>      "application/x-bittorrent",
  ".dvi"          =>      "application/x-dvi",
  ".gz"           =>      "application/x-gzip",
  ".pac"          =>      "application/x-ns-proxy-autoconfig",
  ".swf"          =>      "application/x-shockwave-flash",
  ".tar.gz"       =>      "application/x-tgz",
  ".tgz"          =>      "application/x-tgz",
  ".tar"          =>      "application/x-tar",
  ".zip"          =>      "application/zip",
  ".mp3"          =>      "audio/mpeg",
  ".m3u"          =>      "audio/x-mpegurl",
  ".wma"          =>      "audio/x-ms-wma",
  ".wax"          =>      "audio/x-ms-wax",
  ".ogg"          =>      "application/ogg",
  ".wav"          =>      "audio/x-wav",
  ".gif"          =>      "image/gif",
  ".jpg"          =>      "image/jpeg",
  ".jpeg"         =>      "image/jpeg",
  ".png"          =>      "image/png",
  ".xbm"          =>      "image/x-xbitmap",
  ".xpm"          =>      "image/x-xpixmap",
  ".xwd"          =>      "image/x-xwindowdump",
  ".css"          =>      "text/css",
  ".html"         =>      "text/html",
  ".htm"          =>      "text/html",
  ".js"           =>      "text/javascript",
  ".asc"          =>      "text/plain",
  ".c"            =>      "text/plain",
  ".cpp"          =>      "text/plain",
  ".log"          =>      "text/plain",
  ".conf"         =>      "text/plain",
  ".text"         =>      "text/plain",
  ".txt"          =>      "text/plain",
  ".dtd"          =>      "text/xml",
  ".xml"          =>      "text/xml",
  ".mpeg"         =>      "video/mpeg",
  ".mpg"          =>      "video/mpeg",
  ".mov"          =>      "video/quicktime",
  ".qt"           =>      "video/quicktime",
  ".avi"          =>      "video/x-msvideo",
  ".asf"          =>      "video/x-ms-asf",
  ".asx"          =>      "video/x-ms-asf",
  ".wmv"          =>      "video/x-ms-wmv",
  ".bz2"          =>      "application/x-bzip",
  ".tbz"          =>      "application/x-bzip-compressed-tar",
  ".tar.bz2"      =>      "application/x-bzip-compressed-tar",
  ".json"         =>      "application/json"
 )
